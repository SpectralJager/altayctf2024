{
	"mappings":";AACaA,IC2BAC,ECjBPC,ECRFC,EAgGSC,GC+ETC,EAWAC,EAEEC,EA0BAC,ECvNKC,ELUEC,EAAgC,CAAA,EAChCC,EAAY,CAAA,EACZC,GACZ,oECbYC,EAAUC,MAAMD,QAStB,SAASE,EAAOC,EAAKC,EAAAA,CAE3B,QAASR,KAAKQ,EAAOD,EAAIP,CAAAA,EAAKQ,EAAMR,CAAAA,EACpC,OAA6BO,CAC7B,CAAA,SAQeE,EAAWC,EAAAA,CAC1B,IAAIC,EAAaD,EAAKC,WAClBA,GAAYA,EAAWC,YAAYF,CAAAA,CACvC,CEZM,SAASG,GAAcC,EAAMN,EAAOO,EAAAA,CAC1C,IACCC,EACAC,EACAjB,EAHGkB,EAAkB,CAAA,EAItB,IAAKlB,KAAKQ,EACLR,GAAK,MAAOgB,EAAMR,EAAMR,CAAAA,EACnBA,GAAK,MAAOiB,EAAMT,EAAMR,CAAAA,EAC5BkB,EAAgBlB,CAAAA,EAAKQ,EAAMR,CAAAA,EAUjC,GAPImB,UAAUC,OAAS,IACtBF,EAAgBH,SACfI,UAAUC,OAAS,EAAI5B,EAAM6B,KAAKF,UAAW,CAAA,EAAKJ,GAKjC,OAARD,GAAQ,YAAcA,EAAKQ,cAAgB,KACrD,IAAKtB,KAAKc,EAAKQ,aACVJ,EAAgBlB,CAAAA,IADNsB,SAEbJ,EAAgBlB,CAAAA,EAAKc,EAAKQ,aAAatB,CAAAA,GAK1C,OAAOuB,EAAYT,EAAMI,EAAiBF,EAAKC,EAAK,IAAA,CACpD,CAceM,SAAAA,EAAYT,EAAMN,EAAOQ,EAAKC,EAAKO,EAAAA,CAIlD,IAAMC,EAAQ,CACbX,KAAAA,EACAN,MAAAA,EACAQ,IAAAA,EACAC,IAAAA,EACAS,IAAW,KACXC,GAAS,KACTC,IAAQ,EACRC,IAAM,KAKNC,IAAAA,OACAC,IAAY,KACZC,YAAAA,OACAC,IAAWT,GAAAA,EAAqB9B,EAChCwC,IAAAA,GACAC,IAAQ,CAAA,EAMT,OAFIX,GAAY,MAAQ/B,EAAQgC,OAAS,MAAMhC,EAAQgC,MAAMA,CAAAA,EAEtDA,CACP,CAAA,SAEeW,IAAAA,CACf,MAAO,CAAEC,QAAS,IAAA,CAClB,CAEeC,SAAAA,EAAS9B,EAAAA,CACxB,OAAOA,EAAMO,QACb,CC/EewB,SAAAA,EAAc/B,EAAOgC,EAAAA,CACpCC,KAAKjC,MAAQA,EACbiC,KAAKD,QAAUA,CACf,CA0EM,SAASE,EAAcjB,EAAOkB,EAAAA,CACpC,GAAIA,GAAc,KAEjB,OAAOlB,EAAAE,GACJe,EAAcjB,EAAeA,GAAAA,EAAAA,IAAe,CAAA,EAC5C,KAIJ,QADImB,EACGD,EAAalB,EAAAC,IAAgBN,OAAQuB,IAG3C,IAFAC,EAAUnB,EAAAC,IAAgBiB,CAAAA,IAEX,MAAQC,EAAAf,KAAgB,KAItC,OAAOe,EACPf,IAQF,OAA4B,OAAdJ,EAAMX,MAAQ,WAAa4B,EAAcjB,CAAAA,EAAS,IAChE,CA2CD,SAASoB,EAAwBpB,EAAAA,CAAjC,IAGWzB,EACJ8C,EAHN,IAAKrB,EAAQA,EAAHE,KAAqB,MAAQF,EAAKM,KAAe,KAAM,CAEhE,IADAN,EAAKI,IAAQJ,EAAKM,IAAYgB,KAAO,KAC5B/C,EAAI,EAAGA,EAAIyB,EAAKC,IAAWN,OAAQpB,IAE3C,IADI8C,EAAQrB,EAAAC,IAAgB1B,CAAAA,IACf,MAAQ8C,EAAAjB,KAAc,KAAM,CACxCJ,EAAKI,IAAQJ,EAAKM,IAAYgB,KAAOD,EAArCjB,IACA,KACA,CAGF,OAAOgB,EAAwBpB,CAAAA,CAC/B,CACD,CAAA,SA4BeuB,EAAcC,EAAAA,EAAAA,CAE1BA,EAADnB,MACCmB,EAAAnB,IAAAA,KACDlC,EAAcsD,KAAKD,CAAAA,GAAAA,CAClBE,EAAAA,OACFtD,IAAiBJ,EAAQ2D,sBAEzBvD,EAAeJ,EAAQ2D,oBACNtD,GAAOqD,CAAAA,CAEzB,CASD,SAASA,GAAAA,CAAT,IACKF,EAMEI,EAzGkBC,EAQjBC,EAPHC,EACHC,EACAC,EACAC,EACAC,EAkGD,IAHAhE,EAAciE,KAAK9D,CAAAA,EAGXkD,EAAIrD,EAAckE,MAAAA,GACrBb,EAAAA,MACCI,EAAoBzD,EAAcwB,OAjGjCmC,EAAAA,OANNE,GADGD,GADoBF,EA0GNL,GAzGNhB,KAAZJ,IAGC8B,EAAc,CAAA,EACdC,EAAW,CAAA,GAFXF,EAAYJ,EAFbS,QAOOR,EAAWjD,EAAO,CAAD,EAAKkD,CAAAA,GACpBvB,IAAauB,EAAQvB,IAAa,EACtCxC,EAAQgC,OAAOhC,EAAQgC,MAAM8B,CAAAA,EAEjCS,EACCN,EACAH,EACAC,EACAF,EAJGW,IAKHP,EAAUQ,kBALPD,OJrIsB,GI2IzBT,EAAQrB,IAAyB,CAACsB,CAAAA,EAAU,KAC5CE,EACAF,GAAiBf,EAAcc,CAAAA,EAAYC,CAAAA,EJ7IlB,GI8ItBD,EAAArB,KACHyB,CAAAA,EAGDL,EAAA5B,GAAAD,IAA2B6B,EAA3BrB,GAAAA,EAA8CqB,EAC9CY,GAAWR,EAAaJ,EAAUK,CAAAA,EAE9BL,EAAQ1B,KAAS4B,GACpBZ,EAAwBU,CAAAA,GA8EpB3D,EAAcwB,OAASiC,GAI1BzD,EAAciE,KAAK9D,CAAAA,GAItBoD,EAAAA,IAAyB,CACzB,CElNeiB,SAAAA,GACfV,EACAW,EACAC,EACAC,EACAC,EACAC,EACAC,EACAf,EACAF,EACAkB,EACAf,EAAAA,CAXeQ,IAaXpE,EAEHwD,EAEAoB,EAEAC,EAEAC,EAKGC,EAAeR,GAAkBA,EAAnB7C,KAAgDxB,EAE9D8E,EAAoBX,EAAajD,OAMrC,IAJAkD,EAAcxC,IAAY2B,EAC1BwB,GAA0BX,EAAgBD,EAAcU,CAAAA,EACxDtB,EAASa,EAAAA,IAEJtE,EAAI,EAAGA,EAAIgF,EAAmBhF,KAClC4E,EAAaN,EAAc5C,IAAW1B,CAAAA,IAGvB,MACO,OAAd4E,GAAc,WACA,OAAdA,GAAc,aAQrBpB,EADGoB,EAAAA,MACHpB,GAAWvD,EAEA8E,EAAYH,EAAD1C,GAAAA,GAAuBjC,EAI9C2E,EAAU1C,IAAUlC,EAGpBgE,EACCN,EACAkB,EACApB,EACAgB,EACAC,EACAC,EACAf,EACAF,EACAkB,EACAf,CAAAA,EAIDiB,EAASD,EAAT/C,IACI+C,EAAW3D,KAAOuC,EAASvC,KAAO2D,EAAW3D,MAC5CuC,EAASvC,KACZiE,EAAS1B,EAASvC,IAAK,KAAM2D,CAAAA,EAE9BhB,EAASV,KACR0B,EAAW3D,IACX2D,EAAU7C,KAAe8C,EACzBD,CAAAA,GAIEE,GAAiB,MAAQD,GAAU,OACtCC,EAAgBD,GN3GS,MM+GzBD,EAAUzC,KACVqB,EAAQ9B,MAAekD,EAAvBlD,IAEA+B,EAAS0B,GAAOP,EAAYnB,EAAQC,CAAAA,EAEV,OAAnBkB,EAAW9D,MAAQ,YAC1B8D,EAAA9C,MADkBhB,OAMlB2C,EAASmB,EACT9C,IAAU+C,IACVpB,EAASoB,EAAOO,aAQjBR,EAAU9C,IAAAA,OAGV8C,EAAUzC,KAAAA,SAaXmC,EAAAxC,IAA0B2B,EAC1Ba,EAAAzC,IAAsBiD,CACtB,CAOD,SAASG,GAA0BX,EAAgBD,EAAcU,EAAAA,CAAjE,IAEK/E,EAEA4E,EAEApB,EA2FG6B,EACAC,EA1FDN,EAAoBX,EAAajD,OACnCmE,EAAoBR,EAAY3D,OACnCoE,EAAuBD,EAEpBE,EAAO,EAGX,IADAnB,EAAA5C,IAA2B,CAAA,EACtB1B,EAAI,EAAGA,EAAIgF,EAAmBhF,KAUjC4E,EAAaN,EAAc5C,IAAW1B,CAAAA,GAPvC4E,EAAaP,EAAarE,CAAAA,IAGX,MACO,OAAd4E,GAAc,WACA,OAAdA,GAAc,WAEsB,KAMtB,OAAdA,GAAc,UACA,OAAdA,GAAc,UAEA,OAAdA,GAAc,UACrBA,EAAW5C,aAAe0D,OAEiBnE,EAC1C,KACAqD,EACA,KACA,KACAA,CAAAA,EAESxE,EAAQwE,CAAAA,EACyBrD,EAC1Ce,EACA,CAAEvB,SAAU6D,CAAAA,EACZ,KACA,KACA,IAAA,EAESA,EAAW5C,cAFpB,QAEiD4C,EAAAA,IAAoB,EAK3BrD,EAC1CqD,EAAW9D,KACX8D,EAAWpE,MACXoE,EAAW5D,IACX4D,EAAW3D,IAAM2D,EAAW3D,IAAM,KAClC2D,EAED3C,GAAAA,EAC2C2C,IAI1B,MAyBlBA,EAAAA,GAAqBN,EACrBM,EAAAA,IAAoBN,EAAA1C,IAAwB,EAGtC0D,EAAgBK,GACrBf,EACAG,EAHKM,EAAcrF,EAAIyF,EAKvBD,CAAAA,EAMDZ,EAAA1C,IAAoBoD,EAEpB9B,EAAW,KACP8B,IADO,KAGVE,KADAhC,EAAWuB,EAAYO,CAAAA,KAGtB9B,EAAQrB,KN9QW,SMqRFqB,GAAY,MAAQA,EAAAA,MAAuB,MAGzD8B,GAHkC9B,IAIrCiC,IAI6B,OAAnBb,EAAW9D,MAAQ,aAC7B8D,EAAAzC,KNhSwB,QMkSfmD,IAAkBD,IACxBC,IAAkBD,EAAc,EACnCI,IACUH,EAAgBD,EACtBG,EAAuBR,EAAoBK,EAC9CI,GAAQH,EAAgBD,EAGxBI,IAIAA,EAFSH,EAAgBD,GACtBC,GAAiBD,EAAc,EAC3BC,EAAgBD,EAKjB,EAKJC,IAAkBtF,EAAIyF,IACzBb,EAAAzC,KNzTwB,UMmOzBqB,EAAWuB,EAAY/E,CAAAA,IACPwD,EAASxC,KAAO,MAAQwC,EAAxC3B,MACK2B,EAAA3B,KAAiByC,EAAjBxC,MACHwC,EAAAxC,IAA0BY,EAAcc,CAAAA,GAGzCoC,EAAQpC,EAAUA,EAAAA,EAAU,EAW5BuB,EAAY/E,CAAAA,EAAK,KACjBwF,KA6EH,GAAIA,EACH,IAAKxF,EAAI,EAAGA,EAAIuF,EAAmBvF,KAClCwD,EAAWuB,EAAY/E,CAAAA,IACP,MNnUI,SMmUKwD,EAAQrB,OAC5BqB,EAAAA,KAAiBc,EAArBxC,MACCwC,EAAcxC,IAAYY,EAAcc,CAAAA,GAGzCoC,EAAQpC,EAAUA,CAAAA,EAIrB,CAQD,SAAS2B,GAAOU,EAAapC,EAAQC,EAAAA,CAArC,IAIM3C,EACKf,EAFV,GAA+B,OAApB6F,EAAY/E,MAAQ,WAAY,CAE1C,IADIC,EAAW8E,EAAHnE,IACH1B,EAAI,EAAGe,GAAYf,EAAIe,EAASK,OAAQpB,IAC5Ce,EAASf,CAAAA,IAKZe,EAASf,CAAAA,EAAT2B,GAAsBkE,EACtBpC,EAAS0B,GAAOpE,EAASf,CAAAA,EAAIyD,EAAQC,CAAAA,GAIvC,OAAOD,CACP,CAKD,OALWoC,EAAWhE,KAAS4B,IAC9BC,EAAUoC,aAAaD,EAAvBhE,IAAyC4B,GAAU,IAAA,EACnDA,EAASoC,EACThE,KAEM4B,GAAUA,EAAO2B,WACxB,CAQM,SAASW,GAAahF,EAAUiF,EAAAA,CAUtC,OATAA,EAAMA,GAAO,CAAA,EACTjF,GAAY,MAA2B,OAAZA,GAAY,YAChCX,EAAQW,CAAAA,EAClBA,EAASkF,KAAK,SAAAnD,EAAAA,CACbiD,GAAajD,EAAOkD,CAAAA,CACpB,CAAA,EAEDA,EAAI9C,KAAKnC,CAAAA,GAEHiF,CACP,CASD,SAASL,GACRf,EACAG,EACAM,EACAG,EAAAA,CAJD,IAMOxE,EAAM4D,EAAW5D,IACjBF,EAAO8D,EAAW9D,KACpBoF,EAAIb,EAAc,EAClBc,EAAId,EAAc,EAClB7B,EAAWuB,EAAYM,CAAAA,EAc3B,GACC7B,IAAa,MACZA,GAAYxC,GAAOwC,EAASxC,KAAOF,IAAS0C,EAAS1C,KAEtD,OAAOuE,EAAAA,GAPPG,GACChC,GAAY,MN7ZQ,SM6ZCA,EAAAA,KAAmC,EAAI,GAQ7D,KAAO0C,GAAK,GAAKC,EAAIpB,EAAY3D,QAAQ,CACxC,GAAI8E,GAAK,EAAG,CAEX,IADA1C,EAAWuB,EAAYmB,CAAAA,INvaJ,SM0ajB1C,EAAArB,MACDnB,GAAOwC,EAASxC,KAChBF,IAAS0C,EAAS1C,KAElB,OAAOoF,EAERA,GACA,CAED,GAAIC,EAAIpB,EAAY3D,OAAQ,CAE3B,IADAoC,EAAWuB,EAAYoB,CAAAA,INpbJ,SMubjB3C,EAAArB,MACDnB,GAAOwC,EAASxC,KAChBF,IAAS0C,EAAS1C,KAElB,OAAOqF,EAERA,GACA,CACD,CAGF,MAAA,EACA,CCvcD,SAASC,EAASC,EAAOrF,EAAKsF,EAAAA,CACzBtF,EAAI,CAAA,IAAO,IACdqF,EAAME,YAAYvF,EAAKsF,GAAgB,EAAKA,EAE5CD,EAAMrF,CAAAA,EADIsF,GAAS,KACN,GACa,OAATA,GAAS,UAAYnG,GAAmBqG,KAAKxF,CAAAA,EACjDsF,EAEAA,EAAQ,IAEtB,CAUM,SAASC,EAAYE,EAAKC,EAAMJ,EAAOK,EAAUlC,EAAAA,CAAjD,IACFmC,EAEJC,EAAG,GAAIH,IAAS,QACf,GAAoB,OAATJ,GAAS,SACnBG,EAAIJ,MAAMS,QAAUR,MACd,CAKN,GAJuB,OAAZK,GAAY,WACtBF,EAAIJ,MAAMS,QAAUH,EAAW,IAG5BA,EACH,IAAKD,KAAQC,EACNL,GAASI,KAAQJ,GACtBF,EAASK,EAAIJ,MAAOK,EAAM,EAAA,EAK7B,GAAIJ,EACH,IAAKI,KAAQJ,EACPK,GAAYL,EAAMI,CAAAA,IAAUC,EAASD,CAAAA,GACzCN,EAASK,EAAIJ,MAAOK,EAAMJ,EAAMI,CAAAA,CAAAA,CAInC,SAGOA,EAAK,CAAA,IAAO,KAAOA,EAAK,CAAA,IAAO,IACvCE,EACCF,KAAUA,EAAOA,EAAKK,QAAQ,6BAA8B,IAAA,GAG9BL,EAA3BA,EAAKM,YAAAA,IAAiBP,EAAYC,EAAKM,YAAAA,EAAcxH,MAAM,CAAA,EACnDkH,EAAKlH,MAAM,CAAA,EAElBiH,EAALQ,IAAqBR,EAAGQ,EAAc,CAAA,GACtCR,EAAGQ,EAAYP,EAAOE,CAAAA,EAAcN,EAEhCA,EACEK,EAKJL,EAAMY,EAAYP,EAASO,GAJ3BZ,EAAMY,EAAYC,KAAKC,IAAAA,EAEvBX,EAAIY,iBAAiBX,EADLE,EAAaU,EAAoBC,EACbX,CAAAA,GAMrCH,EAAIe,oBAAoBd,EADRE,EAAaU,EAAoBC,EACVX,CAAAA,MAElC,CACN,GAAInC,EAIHiC,EAAOA,EAAKK,QAAQ,cAAe,GAAA,EAAKA,QAAQ,SAAU,GAAA,UAE1DL,IAAS,SACTA,IAAS,UACTA,IAAS,QACTA,IAAS,QACTA,IAAS,QAGTA,IAAS,YACTA,IAAS,YACTA,IAAS,WACTA,IAAS,WACTA,IAAS,QACTA,KAAQD,EAER,GAAA,CACCA,EAAIC,CAAAA,EAAQJ,GAAgB,GAE5B,MAAMO,CACK,MAAHY,CAAG,CAUO,OAATnB,GAAS,aAETA,GAAS,MAASA,IAAlBA,IAAqCI,EAAK,CAAA,IAAO,IAG3DD,EAAIiB,gBAAgBhB,CAAAA,EAFpBD,EAAIkB,aAAajB,EAAMJ,CAAAA,EAIxB,CACD,CAOD,SAASiB,EAAWE,EAAAA,CACnB,IAAMG,EAAenF,KAAAwE,EAAgBQ,EAAE3G,KAAAA,EAAO,EAM9C,GAAK2G,EAAEI,GAMA,GAAIJ,EAAEI,GAAeD,EAAaV,EACxC,YAJAO,EAAEI,EAAcV,KAAKC,IAAAA,EAMtB,OAAOQ,EAAanI,EAAQqI,MAAQrI,EAAQqI,MAAML,CAAAA,EAAKA,CAAAA,CACvD,CAOD,SAASH,EAAkBG,EAAAA,CAC1B,OAAOhF,KAAAwE,EAAgBQ,EAAE3G,KAAAA,EAAO,EAAMrB,EAAQqI,MAAQrI,EAAQqI,MAAML,CAAAA,EAAKA,CAAAA,CACzE,CCxHM,SAASzD,EACfN,EACAH,EACAC,EACAgB,EACAC,EACAC,EACAf,EACAF,EACAkB,EACAf,EAAAA,CAVM,IAaFmE,EAkBE9E,EAAG+E,EAAOC,EAAUC,EAAUC,EAAUC,EACxCC,EAKAC,EACAC,EAuGOvI,EA4BPwI,EACHC,EASSzI,EA6BNqE,EAlMLqE,EAAUnF,EAASzC,KAIpB,GAAIyC,EAASvB,cAAb,OAAwC,OAAA,KR9CX,IQiDzBwB,EAAAA,MACHmB,EAAAA,CAAAA,ERpD0B,GQoDTnB,EAAQrB,KAEzBuC,EAAoB,CADpBjB,EAASF,EAAA1B,IAAgB2B,EAAhB3B,GAAAA,IAILkG,EAAMtI,EAAXmC,MAA2BmG,EAAIxE,CAAAA,EAE/BoF,EAAO,GAAsB,OAAXD,GAAW,WAC5B,GAAA,CAgEC,GA9DIL,EAAW9E,EAAS/C,MAKpB8H,GADJP,EAAMW,EAAQE,cACQpE,EAAcuD,EAApChG,GAAAA,EACIwG,EAAmBR,EACpBO,EACCA,EAAS9H,MAAM8F,MACfyB,EAFOpG,GAGR6C,EAGChB,EAAJzB,IAECqG,GADAnF,EAAIM,EAAAxB,IAAsByB,EAAtBzB,KACwBJ,GAAwBsB,EACpD4F,KAEI,cAAeH,GAAWA,EAAQI,UAAUC,OAE/CxF,EAAAxB,IAAsBkB,EAAI,IAAIyF,EAAQL,EAAUE,CAAAA,GAGhDhF,EAAQxB,IAAckB,EAAI,IAAIV,EAC7B8F,EACAE,CAAAA,EAEDtF,EAAEjB,YAAc0G,EAChBzF,EAAE8F,OAASC,IAERV,GAAUA,EAASW,IAAIhG,CAAAA,EAE3BA,EAAEzC,MAAQ6H,EACLpF,EAAEiG,QAAOjG,EAAEiG,MAAQ,CAAA,GACxBjG,EAAET,QAAU+F,EACZtF,EAAAgB,IAAmBO,EACnBwD,EAAQ/E,EAAAnB,IAAAA,GACRmB,EAACkG,IAAoB,CAAA,EACrBlG,EAACmG,IAAmB,CAAA,GAIjBnG,EAAAoG,KAAgB,OACnBpG,EAAAoG,IAAepG,EAAEiG,OAGdR,EAAQY,0BAA4B,OACnCrG,EAACoG,KAAepG,EAAEiG,QACrBjG,EAACoG,IAAc/I,EAAO,CAAD,EAAK2C,EAALoG,GAAAA,GAGtB/I,EACC2C,EACAyF,IAAAA,EAAQY,yBAAyBjB,EAAUpF,EAAAA,GAAAA,CAAAA,GAI7CgF,EAAWhF,EAAEzC,MACb0H,EAAWjF,EAAEiG,MACbjG,EAAAhB,IAAWsB,EAGPyE,EAEFU,EAAQY,0BAA4B,MACpCrG,EAAEsG,oBAAsB,MAExBtG,EAAEsG,mBAAAA,EAGCtG,EAAEuG,mBAAqB,MAC1BvG,EAAAA,IAAmBC,KAAKD,EAAEuG,iBAAAA,MAErB,CASN,GAPCd,EAAQY,0BAA4B,MACpCjB,IAAaJ,GACbhF,EAAEwG,2BAA6B,MAE/BxG,EAAEwG,0BAA0BpB,EAAUE,CAAAA,EAAAA,CAIrCtF,EACCA,MAAAA,EAAEyG,uBAAyB,MAC5BzG,EAAEyG,sBACDrB,EACApF,EAFDoG,IAGCd,CAAAA,IAJEmB,IAMHnG,EAAQtB,MAAeuB,EAPxBvB,KAQC,CAkBD,IAhBIsB,EAAQtB,MAAeuB,EAA3BvB,MAKCgB,EAAEzC,MAAQ6H,EACVpF,EAAEiG,MAAQjG,EAAVoG,IACApG,EAACnB,IAAAA,IAGFyB,EAAAA,IAAgBC,EAChBD,IAAAA,EAAA7B,IAAqB8B,EAArB9B,IACA6B,EAAA7B,IAAmBiI,QAAQ,SAAAlI,EAAAA,CACtBA,IAAOA,EAAAE,GAAgB4B,EAC3B,CAAA,EAEQvD,EAAI,EAAGA,EAAIiD,EAAAmG,IAAkBhI,OAAQpB,IAC7CiD,EAAAkG,IAAmBjG,KAAKD,EAACmG,IAAiBpJ,CAAAA,CAAAA,EAE3CiD,EAAAmG,IAAoB,CAAA,EAEhBnG,EAACkG,IAAkB/H,QACtBuC,EAAYT,KAAKD,CAAAA,EAGlB,MAAM0F,CACN,CAEG1F,EAAE2G,qBAAuB,MAC5B3G,EAAE2G,oBAAoBvB,EAAUpF,EAAAA,IAAcsF,CAAAA,EAG3CtF,EAAE4G,oBAAsB,MAC3B5G,EAAAkG,IAAmBjG,KAAK,UAAA,CACvBD,EAAE4G,mBAAmB5B,EAAUC,EAAUC,CAAAA,CACzC,CAAA,CAEF,CASD,GAPAlF,EAAET,QAAU+F,EACZtF,EAAEzC,MAAQ6H,EACVpF,EAAAc,IAAeL,EACfT,EAACpB,IAAAA,GAEG2G,EAAa/I,EAAHqK,IACbrB,EAAQ,EACL,cAAeC,GAAWA,EAAQI,UAAUC,OAAQ,CAQvD,IAPA9F,EAAEiG,MAAQjG,EAAVoG,IACApG,EAACnB,IAAAA,GAEG0G,GAAYA,EAAWjF,CAAAA,EAE3BwE,EAAM9E,EAAE8F,OAAO9F,EAAEzC,MAAOyC,EAAEiG,MAAOjG,EAAET,OAAAA,EAE1BxC,EAAI,EAAGA,EAAIiD,EAAAmG,IAAkBhI,OAAQpB,IAC7CiD,EAACkG,IAAkBjG,KAAKD,EAACmG,IAAiBpJ,CAAAA,CAAAA,EAE3CiD,EAAAmG,IAAoB,CAAA,CACpB,KACA,IACCnG,EAAAnB,IAAAA,GACI0G,GAAYA,EAAWjF,CAAAA,EAE3BwE,EAAM9E,EAAE8F,OAAO9F,EAAEzC,MAAOyC,EAAEiG,MAAOjG,EAAET,OAAAA,EAGnCS,EAAEiG,MAAQjG,EAAVoG,UACQpG,EAACnB,KAAAA,EAAa2G,EAAQ,IAIhCxF,EAAEiG,MAAQjG,EAAVoG,IAEIpG,EAAE8G,iBAAmB,OACxBvF,EAAgBlE,EAAOA,EAAO,CAAD,EAAKkE,CAAAA,EAAgBvB,EAAE8G,gBAAAA,CAAAA,GAGhD/B,GAAS/E,EAAE+G,yBAA2B,OAC1C7B,EAAWlF,EAAE+G,wBAAwB/B,EAAUC,CAAAA,GAOhD9D,GACCV,EACAtD,EAJGiE,EADH0D,GAAO,MAAQA,EAAIjH,OAASwB,GAAYyF,EAAI/G,KAAO,KACZ+G,EAAIvH,MAAMO,SAAWgH,CAAAA,EAIpC1D,EAAe,CAACA,CAAAA,EACxCd,EACAC,EACAgB,EACAC,EACAC,EACAf,EACAF,EACAkB,EACAf,CAAAA,EAGDX,EAAEF,KAAOQ,EAAT1B,IAGA0B,EAAQpB,KAAAA,KAEJc,EAACkG,IAAkB/H,QACtBuC,EAAYT,KAAKD,CAAAA,EAGdmF,IACHnF,EAAC4F,IAAiB5F,EAAAtB,GAAyB,KAkB5C,OAhBQ8F,EAAAA,CACRlE,EAAQtB,IAAa,KAEjB0C,GAAeD,GAAqB,MACvCnB,EAAQ1B,IAAQ4B,EAChBF,EAAApB,KAAmBwC,EAChBpF,IRhRqB,GQkRxBmF,EAAkBA,EAAkBuF,QAAQxG,CAAAA,CAAAA,EAAW,OAIvDF,EAAQ1B,IAAQ2B,EAAAA,IAChBD,EAAQ7B,IAAa8B,EACrB9B,KACDjC,EAAOoC,IAAa4F,EAAGlE,EAAUC,CAAAA,CACjC,MAEDkB,GAAqB,MACrBnB,EAAQtB,MAAeuB,EAFjBvB,KAINsB,EAAA7B,IAAqB8B,EACrBD,IAAAA,EAAA1B,IAAgB2B,EAAhB3B,KAEA0B,EAAQ1B,IAAQqI,GACf1G,EACAD,IAAAA,EACAC,EACAgB,EACAC,EACAC,EACAf,EACAgB,EACAf,CAAAA,GAIGmE,EAAMtI,EAAQ0K,SAASpC,EAAIxE,CAAAA,CAChC,CAOM,SAASY,GAAWR,EAAayG,EAAMxG,EAAAA,CAC7CwG,EAAAtI,IAAAA,OAEA,QAAS9B,EAAI,EAAGA,EAAI4D,EAASxC,OAAQpB,IACpCkF,EAAStB,EAAS5D,CAAAA,EAAI4D,EAAAA,EAAW5D,CAAAA,EAAI4D,EAAAA,EAAW5D,CAAAA,CAAAA,EAG7CP,EAAJsC,KAAqBtC,EAAAsC,IAAgBqI,EAAMzG,CAAAA,EAE3CA,EAAYsC,KAAK,SAAAhD,EAAAA,CAChB,GAAA,CAECU,EAAcV,EAAdkG,IACAlG,EAACkG,IAAoB,CAAA,EACrBxF,EAAYsC,KAAK,SAAAoE,EAAAA,CAEhBA,EAAGhJ,KAAK4B,CAAAA,CACR,CAAA,CAGD,OAFQwE,EAAAA,CACRhI,EAAOoC,IAAa4F,EAAGxE,EAAvBhB,GAAAA,CACA,CACD,CAAA,CACD,CAiBD,SAASiI,GACRzD,EACAlD,EACAC,EACAgB,EACAC,EACAC,EACAf,EACAgB,EACAf,EAAAA,CATD,IAeK5D,EAEAsK,EAEAC,EAEAC,EACAlE,EACAmE,EACAC,EAbAzC,EAAWzE,EAAShD,MACpB6H,EAAW9E,EAAS/C,MACpBmK,EAAkCpH,EAASzC,KAgB/C,GAFI6J,IAAa,QAAOlG,EAAAA,IAEpBC,GAAqB,MACxB,IAAK1E,EAAI,EAAGA,EAAI0E,EAAkBtD,OAAQpB,IAMzC,IALAsG,EAAQ5B,EAAkB1E,CAAAA,IAOzB,iBAAkBsG,GAAAA,CAAAA,CAAYqE,IAC7BA,EAAWrE,EAAMsE,YAAcD,EAAWrE,EAAMqE,WAAa,GAC7D,CACDlE,EAAMH,EACN5B,EAAkB1E,CAAAA,EAAK,KACvB,KACA,EAIH,GAAIyG,GAAO,KAAM,CAChB,GAAIkE,IAAa,KAChB,OAAOE,SAASC,eAAezC,CAAAA,EAI/B5B,EADGhC,EACGoG,SAASE,gBAAgB,6BAA8BJ,CAAAA,EAEvDE,SAAShK,cAAc8J,EAAUtC,EAAS2C,IAAM3C,CAAAA,EAIvD3D,EAAoB,KAGpBC,EAAAA,EACA,CAED,GAAIgG,IAAa,KAEZ1C,IAAaI,GAAc1D,GAAe8B,EAAIwE,OAAS5C,IAC1D5B,EAAIwE,KAAO5C,OAEN,CASN,GAPA3D,EAAoBA,GAAqBlF,EAAM6B,KAAKoF,EAAIyE,UAAAA,EAExDjD,EAAWzE,EAAShD,OAASP,EAAAA,CAKxB0E,GAAeD,GAAqB,KAExC,IADAuD,EAAW,CAAA,EACNjI,EAAI,EAAGA,EAAIyG,EAAI0E,WAAW/J,OAAQpB,IAEtCiI,GADA3B,EAAQG,EAAI0E,WAAWnL,CAAAA,GACR0G,IAAAA,EAAQJ,EAAMA,MAI/B,IAAKtG,KAAKiI,EACT3B,EAAQ2B,EAASjI,CAAAA,EACbA,GAAK,aACEA,GAAK,0BACfuK,EAAUjE,EACAtG,IAAM,OAAWA,KAAKqI,GAChC9B,EAAYE,EAAKzG,EAAG,KAAMsG,EAAO7B,CAAAA,GAMnC,IAAKzE,KAAKqI,EACT/B,EAAQ+B,EAASrI,CAAAA,EACbA,GAAK,WACRwK,EAAclE,EACJtG,GAAK,0BACfsK,EAAUhE,EACAtG,GAAK,QACfyK,EAAanE,EACHtG,GAAK,UACf0K,EAAUpE,EAEVtG,IAAM,OACJ2E,GAA+B,OAAT2B,GAAS,YACjC2B,EAASjI,CAAAA,IAAOsG,GAEhBC,EAAYE,EAAKzG,EAAGsG,EAAO2B,EAASjI,CAAAA,EAAIyE,CAAAA,EAK1C,GAAI6F,EAGD3F,GACC4F,IACAD,EAAAc,SAAmBb,EAAnBa,QACAd,EAAOc,SAAY3E,EAAI4E,aAEzB5E,EAAI4E,UAAYf,EAAhBc,QAGD7H,EAAA7B,IAAqB,CAAA,UAEjB6I,IAAS9D,EAAI4E,UAAY,IAE7BjH,GACCqC,EACArG,EAAQoK,CAAAA,EAAeA,EAAc,CAACA,CAAAA,EACtCjH,EACAC,EACAgB,EACAC,GAASkG,IAAa,gBACtBjG,EACAf,EACAe,EACGA,EAAkB,CAAA,EAClBlB,EAAAA,KAAsBd,EAAcc,EAAU,CAAA,EACjDmB,EACAf,CAAAA,EAIGc,GAAqB,KACxB,IAAK1E,EAAI0E,EAAkBtD,OAAQpB,KAC9B0E,EAAkB1E,CAAAA,GAAM,MAAMS,EAAWiE,EAAkB1E,CAAAA,CAAAA,EAM7D2E,IACJ3E,EAAI,QAEHyK,IAFG,SAOFA,IAAehE,EAAIzG,CAAAA,GAClB2K,IAAa,YAAbA,CAA4BF,GAI5BE,IAAa,UAAYF,IAAexC,EAASjI,CAAAA,IAEnDuG,EAAYE,EAAKzG,EAAGyK,EAAYxC,EAASjI,CAAAA,EAAAA,EAAI,EAG9CA,EAAI,UACA0K,IADA,QACyBA,IAAYjE,EAAIzG,CAAAA,GAC5CuG,EAAYE,EAAKzG,EAAG0K,EAASzC,EAASjI,CAAAA,EAAAA,EAAI,EAG5C,CAED,OAAOyG,CACP,CAQM,SAASvB,EAASjE,EAAKqF,EAAO7E,EAAAA,CACpC,GAAA,CACmB,OAAPR,GAAO,WAAYA,EAAIqF,CAAAA,EAC7BrF,EAAIoB,QAAUiE,CAGnB,OAFQmB,EAAAA,CACRhI,EAAAoC,IAAoB4F,EAAGhG,CAAAA,CACvB,CACD,CASemE,SAAAA,EAAQnE,EAAOoE,EAAayF,EAAAA,CAA5B1F,IACX2F,EAuBMvL,EAdV,GARIP,EAAQmG,SAASnG,EAAQmG,QAAQnE,CAAAA,GAEhC8J,EAAI9J,EAAMR,OACTsK,EAAElJ,SAAWkJ,EAAElJ,UAAYZ,EAAdI,KACjBqD,EAASqG,EAAG,KAAM1F,CAAAA,IAIf0F,EAAI9J,EAAHM,MAAwB,KAAM,CACnC,GAAIwJ,EAAEC,qBACL,GAAA,CACCD,EAAEC,qBAAAA,CAGF,OAFQ/D,EAAAA,CACRhI,EAAAoC,IAAoB4F,EAAG5B,CAAAA,CACvB,CAGF0F,EAAExI,KAAOwI,EAACxH,IAAc,KACxBtC,EAAKM,IAAAA,MACL,CAED,GAAKwJ,EAAI9J,EAAHC,IACL,IAAS1B,EAAI,EAAGA,EAAIuL,EAAEnK,OAAQpB,IACzBuL,EAAEvL,CAAAA,GACL4F,EACC2F,EAAEvL,CAAAA,EACF6F,EACAyF,GAAoC,OAAf7J,EAAMX,MAAS,UAATA,EAM1BwK,GAAc7J,EAAKI,KAAS,MAChCpB,EAAWgB,EACXI,GAAAA,EAIDJ,EAAKE,GAAWF,EAAAI,IAAaJ,EAAKK,IAAAA,MAClC,CAGD,SAASkH,GAASxI,EAAO0I,EAAO1G,EAAAA,CAC/B,OAAOC,KAAKT,YAAYxB,EAAOgC,CAAAA,CAC/B,CCnlBeuG,SAAAA,GAAOtH,EAAOiC,EAAW+H,EAAAA,CAAzB1C,IAMXpE,EAOAnB,EAQAG,EACHC,EArBGnE,EAAeA,IAAAA,EAAAkC,GAAcF,EAAOiC,CAAAA,EAYpCF,GAPAmB,EAAoC,OAAf8G,GAAe,YAQrC,KACCA,GAAeA,EAAJ/J,KAA8BgC,EAAAA,IAMzCC,EAAc,CAAA,EACjBC,EAAW,CAAA,EACZI,EACCN,EAPDjC,GAAAA,CAAWkD,GAAe8G,GAAgB/H,GACzC7C,IAAAA,GAAcyB,EAAU,KAAM,CAACb,CAAAA,CAAAA,EAU/B+B,GAAYvD,EACZA,EACAyD,EAAUQ,kBADVjE,OACUiE,CACTS,GAAe8G,EACb,CAACA,CAAAA,EACDjI,EACA,KACAE,EAAUgI,WACVlM,EAAM6B,KAAKqC,EAAUwH,UAAAA,EACrB,KACHvH,EAAAA,CACCgB,GAAe8G,EACbA,EACAjI,EACAA,EACAE,IAAAA,EAAUgI,WACb/G,EACAf,CAAAA,EAIDO,GAAWR,EAAalC,EAAOmC,CAAAA,CAC/B,CAOM,SAAS+H,GAAQlK,EAAOiC,EAAAA,CAC9BqF,GAAOtH,EAAOiC,EAAWiI,EAAAA,CACzB,CAAA,SC5DeC,GAAanK,EAAOjB,EAAOO,EAAAA,CAAAA,IAEzCC,EACAC,EACAjB,EAEGsB,EALAJ,EAAkBZ,EAAO,CAAD,EAAKmB,EAAMjB,KAAAA,EAWvC,IAAKR,KAJDyB,EAAMX,MAAQW,EAAMX,KAAKQ,eAC5BA,EAAeG,EAAMX,KAAKQ,cAGjBd,EACLR,GAAK,MAAOgB,EAAMR,EAAMR,CAAAA,EACnBA,GAAK,MAAOiB,EAAMT,EAAMR,CAAAA,EAEhCkB,EAAgBlB,CAAAA,EADRQ,EAAMR,CAAAA,IACEA,QADkBsB,IAApBtB,OACOsB,EAAatB,CAAAA,EAEbQ,EAAMR,CAAAA,EAS7B,OALImB,UAAUC,OAAS,IACtBF,EAAgBH,SACfI,UAAUC,OAAS,EAAI5B,EAAM6B,KAAKF,UAAW,CAAA,EAAKJ,GAG7CQ,EACNE,EAAMX,KACNI,EACAF,GAAOS,EAAMT,IACbC,GAAOQ,EAAMR,IACb,IAAA,CAED,CL1Ce4K,SAAAA,GAAcC,EAAcC,EAAAA,CAG3C,IAAMvJ,EAAU,CACfT,IAHDgK,EAAY,OAAS/L,IAIpB2B,GAAemK,EAEfE,SAJe,SAINxL,EAAOyL,EAAAA,CAIf,OAAOzL,EAAMO,SAASkL,CAAAA,CACtB,EAEDC,SAAAA,SAAS1L,EAAAA,CAAAA,IAGH2L,EACAC,EAsCL,OAzCK3J,KAAKsH,kBAELoC,EAAO,CAAA,GACPC,EAAM,CAAV,GACIL,CAAAA,EAAatJ,KAEjBA,KAAKsH,gBAAkB,UAAA,CAAA,OAAMqC,CAAN,EAEvB3J,KAAKiH,sBAAwB,SAAU2C,EAAAA,CAClC5J,KAAKjC,MAAM8F,QAAU+F,EAAO/F,OAe/B6F,EAAKlG,KAAK,SAAAhD,EAAAA,CACTA,EAACpB,IAAAA,GACDmB,EAAcC,CAAAA,CACd,CAAA,CAEF,EAEDR,KAAKwG,IAAM,SAAAhG,EAAAA,CACVkJ,EAAKjJ,KAAKD,CAAAA,EACV,IAAIqJ,EAAMrJ,EAAEuI,qBACZvI,EAAEuI,qBAAuB,UAAA,CACxBW,EAAKI,OAAOJ,EAAKlC,QAAQhH,CAAAA,EAAI,CAAA,EACzBqJ,GAAKA,EAAIjL,KAAK4B,CAAAA,CAClB,CACD,GAGKzC,EAAMO,QACb,CAAA,EASF,OAAQyB,EAAQ0J,SAAuB1J,GAAAA,EAAQwJ,SAASpD,YACvDpG,CACD,CJ5CYhD,EAAQU,EAAUV,MCjBzBC,EAAU,CACfoC,ISHM,SAAqB2K,EAAO/K,EAAO+B,EAAUiJ,EAAAA,CAQnD,QANInJ,EAEHoJ,EAEAC,EAEOlL,EAAQA,EAAhBE,IACC,IAAK2B,EAAY7B,EAAHM,MAAAA,CAAyBuB,EAAD3B,GACrC,GAAA,CAcC,IAbA+K,EAAOpJ,EAAUtB,cAEL0K,EAAKE,0BAA4B,OAC5CtJ,EAAUuJ,SAASH,EAAKE,yBAAyBJ,CAAAA,CAAAA,EACjDG,EAAUrJ,EAAHxB,KAGJwB,EAAUwJ,mBAAqB,OAClCxJ,EAAUwJ,kBAAkBN,EAAOC,GAAa,CAAhD,CAAA,EACAE,EAAUrJ,EACVxB,KAGG6K,EACH,OAAQrJ,EAASuF,IAAiBvF,CAInC,OAFQmE,EAAAA,CACR+E,EAAQ/E,CACR,CAIH,MAAM+E,CACN,CAAA,ERxCG9M,EAAU,EAgGDC,GAAiB,SAAA8B,EAAAA,CAC7BA,OAAAA,GAAS,MAAQA,EAAMO,aAAe+K,IADJ,ECxEnCxK,EAAcuG,UAAU+D,SAAW,SAAUG,EAAQC,EAAAA,CAEpD,IAAIC,EAEHA,EADGzK,KAAA4G,KAAmB,MAAQ5G,KAAA4G,MAAoB5G,KAAKyG,MACnDzG,KAAH4G,IAEG5G,KAAA4G,IAAkB/I,EAAO,CAAA,EAAImC,KAAKyG,KAAAA,EAGlB,OAAV8D,GAAU,aAGpBA,EAASA,EAAO1M,EAAO,CAAD,EAAK4M,CAAAA,EAAIzK,KAAKjC,KAAAA,GAGjCwM,GACH1M,EAAO4M,EAAGF,CAAAA,EAIPA,GAAU,MAEVvK,KAAJR,MACKgL,GACHxK,KAAA2G,IAAqBlG,KAAK+J,CAAAA,EAE3BjK,EAAcP,IAAAA,EAEf,EAQDF,EAAcuG,UAAUqE,YAAc,SAAUF,EAAAA,CAC3CxK,KAAAA,MAIHA,KAAAZ,IAAAA,GACIoL,GAAUxK,KAAA0G,IAAsBjG,KAAK+J,CAAAA,EACzCjK,EAAcP,IAAAA,EAEf,EAYDF,EAAcuG,UAAUC,OAASzG,EA8F7B1C,EAAgB,CAAA,EAadE,EACa,OAAXsN,SAAW,WACfA,QAAQtE,UAAUuE,KAAKC,KAAKF,QAAQG,QAAAA,CAAAA,EACpCC,WAuBEzN,EAAY,SAAC0N,EAAGC,EAAAA,CAAMD,OAAAA,EAAAxL,IAAAL,IAAkB8L,EAA5BzL,IAAAL,GAAA,EAuBlBuB,EAAO2G,IAAkB,EC9Od9J,EAAI",
	"names":[
		"MODE_HYDRATE",
		"slice",
		"options",
		"vnodeId",
		"isValidElement",
		"rerenderQueue",
		"prevDebounce",
		"defer",
		"depthSort",
		"i",
		"EMPTY_OBJ",
		"EMPTY_ARR",
		"IS_NON_DIMENSIONAL",
		"isArray",
		"Array",
		"assign",
		"obj",
		"props",
		"removeNode",
		"node",
		"parentNode",
		"removeChild",
		"createElement",
		"type",
		"children",
		"key",
		"ref",
		"normalizedProps",
		"arguments",
		"length",
		"call",
		"defaultProps",
		"createVNode",
		"original",
		"vnode",
		"__k",
		"__",
		"__b",
		"__e",
		"__d",
		"__c",
		"constructor",
		"__v",
		"__i",
		"__u",
		"createRef",
		"current",
		"Fragment",
		"BaseComponent",
		"context",
		"this",
		"getDomSibling",
		"childIndex",
		"sibling",
		"updateParentDomPointers",
		"child",
		"base",
		"enqueueRender",
		"c",
		"push",
		"process",
		"debounceRendering",
		"renderQueueLength",
		"component",
		"newVNode",
		"oldVNode",
		"oldDom",
		"parentDom",
		"commitQueue",
		"refQueue",
		"sort",
		"shift",
		"__P",
		"diff",
		"__n",
		"ownerSVGElement",
		"commitRoot",
		"diffChildren",
		"renderResult",
		"newParentVNode",
		"oldParentVNode",
		"globalContext",
		"isSvg",
		"excessDomChildren",
		"isHydrating",
		"childVNode",
		"newDom",
		"firstChildDom",
		"oldChildren",
		"newChildrenLength",
		"constructNewChildrenArray",
		"applyRef",
		"insert",
		"nextSibling",
		"skewedIndex",
		"matchingIndex",
		"oldChildrenLength",
		"remainingOldChildren",
		"skew",
		"String",
		"findMatchingIndex",
		"unmount",
		"parentVNode",
		"insertBefore",
		"toChildArray",
		"out",
		"some",
		"x",
		"y",
		"setStyle",
		"style",
		"value",
		"setProperty",
		"test",
		"dom",
		"name",
		"oldValue",
		"useCapture",
		"o",
		"cssText",
		"replace",
		"toLowerCase",
		"l",
		"_attached",
		"Date",
		"now",
		"addEventListener",
		"eventProxyCapture",
		"eventProxy",
		"removeEventListener",
		"e",
		"removeAttribute",
		"setAttribute",
		"eventHandler",
		"_dispatched",
		"event",
		"tmp",
		"isNew",
		"oldProps",
		"oldState",
		"snapshot",
		"clearProcessingException",
		"newProps",
		"provider",
		"componentContext",
		"renderHook",
		"count",
		"newType",
		"outer",
		"contextType",
		"__E",
		"prototype",
		"render",
		"doRender",
		"sub",
		"state",
		"__h",
		"_sb",
		"__s",
		"getDerivedStateFromProps",
		"componentWillMount",
		"componentDidMount",
		"componentWillReceiveProps",
		"shouldComponentUpdate",
		"forEach",
		"componentWillUpdate",
		"componentDidUpdate",
		"__r",
		"getChildContext",
		"getSnapshotBeforeUpdate",
		"indexOf",
		"diffElementNodes",
		"diffed",
		"root",
		"cb",
		"newHtml",
		"oldHtml",
		"newChildren",
		"inputValue",
		"checked",
		"nodeType",
		"localName",
		"document",
		"createTextNode",
		"createElementNS",
		"is",
		"data",
		"childNodes",
		"attributes",
		"__html",
		"innerHTML",
		"skipRemove",
		"r",
		"componentWillUnmount",
		"replaceNode",
		"firstChild",
		"hydrate",
		"cloneElement",
		"createContext",
		"defaultValue",
		"contextId",
		"Consumer",
		"contextValue",
		"Provider",
		"subs",
		"ctx",
		"_props",
		"old",
		"splice",
		"error",
		"errorInfo",
		"ctor",
		"handled",
		"getDerivedStateFromError",
		"setState",
		"componentDidCatch",
		"undefined",
		"update",
		"callback",
		"s",
		"forceUpdate",
		"Promise",
		"then",
		"bind",
		"resolve",
		"setTimeout",
		"a",
		"b"
	],
	"sourceRoot":"/",
	"sources":[
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/constants.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/util.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/options.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/create-element.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/component.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/create-context.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/diff/children.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/diff/props.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/diff/index.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/render.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/clone-element.js",
		"../esmd/npm/preact@10.19.3/node_modules/.pnpm/preact@10.19.3/node_modules/preact/src/diff/catch-error.js"
	],
	"sourcesContent":[
		"/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 \u003c\u003c 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 \u003c\u003c 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 \u003c\u003c 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 \u003c\u003c 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n",
		"import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O \u0026 P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O \u0026 P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O \u0026 P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n",
		"import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n",
		"import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array\u003cimport('.').ComponentChildren\u003e} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length \u003e 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length \u003e 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' \u0026\u0026 type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null \u0026\u0026 options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =\u003e\n\tvnode != null \u0026\u0026 vnode.constructor == undefined;\n",
		"import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) =\u003e object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() =\u003e void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null \u0026\u0026 this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() =\u003e void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex \u003c vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null \u0026\u0026 sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tparentDom = component._parentDom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\toldVNode._flags \u0026 MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags \u0026 MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null \u0026\u0026 vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i \u003c vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null \u0026\u0026 child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array\u003cComponent\u003e}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty \u0026\u0026\n\t\t\t(c._dirty = true) \u0026\u0026\n\t\t\trerenderQueue.push(c) \u0026\u0026\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) =\u003e a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length \u003e renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n",
		"import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () =\u003e ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c =\u003e {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c =\u003e {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c =\u003e {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c =\u003e {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () =\u003e {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n",
		"import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array\u003cPreactElement\u003e} excessDomChildren\n * @param {Array\u003cComponent\u003e} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null \u0026\u0026 oldParentVNode != EMPTY_OBJ \u0026\u0026 oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode \u0026\u0026 oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i \u003c newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref \u0026\u0026 oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null \u0026\u0026 newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags \u0026 INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' \u0026\u0026\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags \u0026= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i \u003c newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. \u003cdiv\u003e{reuse}{reuse}\u003c/div\u003e) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM \u0026 etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined \u0026\u0026 childVNode._depth \u003e 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = \u003cdiv /\u003e\n\t\t\t//   \u003cdiv\u003e{reuse}\u003cspan /\u003e{reuse}\u003c/div\u003e\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Handle unmounting null placeholders, i.e. VNode =\u003e null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode \u0026\u0026 oldVNode.key == null \u0026\u0026 oldVNode._dom) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[i] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst skewedIndex = i + skew;\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex \u003e skewedIndex) {\n\t\t\t\tif (remainingOldChildren \u003e newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\t// ### Change from keyed: I think this was missing from the algo...\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex \u003c skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tskew = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tskew = 0;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i \u003c oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null \u0026\u0026 (oldVNode._flags \u0026 MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children \u0026\u0026 i \u003c children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\treturn oldDom \u0026\u0026 oldDom.nextSibling;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child =\u003e {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren \u003e 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren \u003e 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren \u003e\n\t\t(oldVNode != null \u0026\u0026 (oldVNode._flags \u0026 MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode \u0026\u0026 key == oldVNode.key \u0026\u0026 type === oldVNode.type)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x \u003e= 0 || y \u003c oldChildren.length) {\n\t\t\tif (x \u003e= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode \u0026\u0026\n\t\t\t\t\t(oldVNode._flags \u0026 MATCHED) === 0 \u0026\u0026\n\t\t\t\t\tkey == oldVNode.key \u0026\u0026\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y \u003c oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode \u0026\u0026\n\t\t\t\t\t(oldVNode._flags \u0026 MATCHED) === 0 \u0026\u0026\n\t\t\t\t\tkey == oldVNode.key \u0026\u0026\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n",
		"import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value \u0026\u0026 name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' \u0026\u0026 name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = Date.now();\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --\u003e href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --\u003e class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' \u0026\u0026\n\t\t\tname !== 'height' \u0026\u0026\n\t\t\tname !== 'href' \u0026\u0026\n\t\t\tname !== 'list' \u0026\u0026\n\t\t\tname !== 'form' \u0026\u0026\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' \u0026\u0026\n\t\t\tname !== 'download' \u0026\u0026\n\t\t\tname !== 'rowSpan' \u0026\u0026\n\t\t\tname !== 'colSpan' \u0026\u0026\n\t\t\tname !== 'role' \u0026\u0026\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null \u0026\u0026 (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tconst eventHandler = this._listeners[e.type + false];\n\t/**\n\t * This trick is inspired by Vue https://github.com/vuejs/core/blob/main/packages/runtime-dom/src/modules/events.ts#L90-L101\n\t * when the dom performs an event it leaves micro-ticks in between bubbling up which means that an event can trigger on a newly\n\t * created DOM-node while the event bubbles up, this can cause quirky behavior as seen in https://github.com/preactjs/preact/issues/3927\n\t */\n\tif (!e._dispatched) {\n\t\t// When an event has no _dispatched we know this is the first event-target in the chain\n\t\t// so we set the initial dispatched time.\n\t\te._dispatched = Date.now();\n\t\t// When the _dispatched is smaller than the time when the targetted event handler was attached\n\t\t// we know we have bubbled up to an element that was added during patching the dom.\n\t} else if (e._dispatched \u003c= eventHandler._attached) {\n\t\treturn;\n\t}\n\treturn eventHandler(options.event ? options.event(e) : e);\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n",
		"import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array\u003cPreactElement\u003e} excessDomChildren\n * @param {Array\u003cComponent\u003e} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags \u0026 MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags \u0026 MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp \u0026\u0026 globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType \u0026\u0026 newType.prototype.render) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null \u0026\u0026\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null \u0026\u0026\n\t\t\t\t\tnewProps !== oldProps \u0026\u0026\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force \u0026\u0026\n\t\t\t\t\t((c.shouldComponentUpdate != null \u0026\u0026\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode =\u003e {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i \u003c c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() =\u003e {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType \u0026\u0026 newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i \u003c c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty \u0026\u0026 ++count \u003c 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew \u0026\u0026 c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null \u0026\u0026 tmp.type === Fragment \u0026\u0026 tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags \u0026= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null \u0026\u0026\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array\u003cComponent\u003e} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i \u003c refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c =\u003e {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb =\u003e {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array\u003cPreactElement\u003e} excessDomChildren\n * @param {Array\u003cComponent\u003e} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i \u003c excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue \u0026\u0026\n\t\t\t\t'setAttribute' in value === !!nodeType \u0026\u0026\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS('http://www.w3.org/2000/svg', nodeType);\n\t\t} else {\n\t\t\tdom = document.createElement(nodeType, newProps.is \u0026\u0026 newProps);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps \u0026\u0026 (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren \u0026\u0026 slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating \u0026\u0026 excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i \u003c dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' \u0026\u0026 !(i in newProps)) {\n\t\t\t\tsetProperty(dom, i, null, value, isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' \u0026\u0026\n\t\t\t\t(!isHydrating || typeof value == 'function') \u0026\u0026\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating \u0026\u0026\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html \u0026\u0026\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg \u0026\u0026 nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children \u0026\u0026 getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined \u0026\u0026\n\t\t\t\t// #2756 For the \u003cprogress\u003e-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' \u0026\u0026 !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix \u003cselect\u003e value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' \u0026\u0026 inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], false);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined \u0026\u0026 checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref\u003cany\u003e} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i \u003c r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove \u0026\u0026 vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n",
		"import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode \u0026\u0026 replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating \u0026\u0026 replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating \u0026\u0026 replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating \u0026\u0026 replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n",
		"import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array\u003cComponentChildren\u003e} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type \u0026\u0026 vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined \u0026\u0026 defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length \u003e 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length \u003e 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n",
		"/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) \u0026\u0026 !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor \u0026\u0026 ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"
	],
	"version":3
}
